@inject Membership Membership;
@inject NavigationManager NavManager;
@using Microsoft.Graph.Models;
@using JCTG.Models;
@using JCTG.WebApp.Frontend.Components.Modal;

<div class="brand-logo d-flex align-items-center justify-content-between">
    <a href="/" class="text-nowrap logo-img">
        <b class="logo-icon">
            <img src="/images/logos/logo-icon.svg" alt="homepage" class="dark-logo" />
            <img src="/images/logos/logo-light-icon.svg" alt="homepage" class="light-logo" />
        </b>
        <span class="logo-text">
            <img src="/images/logos/logo-text.svg" alt="homepage" class="dark-logo ps-2" />
            <img src="/images/logos/logo-light-text.svg" class="light-logo ps-2" alt="homepage" />
        </span>
    </a>
</div>
<nav class="sidebar-nav scroll-sidebar" data-simplebar>
    <ul id="sidebarnav">
        <li class="pt-3">
            <div class="user-profile d-flex no-block dropdown mt-3">
                <div class="user-pic">
                    <img src="/images/profile/user-6.jpg" alt="users" class="rounded-circle" width="40" />
                </div>
                <div class="user-content hide-menu ms-2">
                    <a href="javascript:void(0)" class="" id="Userdd" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <h5 class="mb-0 user-name fw-medium d-flex ">
                            @name
                            <iconify-icon icon="solar:alt-arrow-down-outline" class="ms-2"></iconify-icon>
                        </h5>
                        <span class="op-5 text-muted">@email</span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="Userdd">
                        <a class="dropdown-item d-flex" href="../dark/page-user-profile.html">
                            <iconify-icon icon="solar:user-linear" class="text-info iconify-sm me-2 ms-1"></iconify-icon>
                            My Profile
                        </a>
                        <a class="dropdown-item d-flex" href="../dark/page-user-profile.html">
                            <iconify-icon icon="solar:card-outline" class="text-primary iconify-sm me-2 ms-1"></iconify-icon>
                            My Balance
                        </a>
                        <a class="dropdown-item d-flex border-bottom border-top mt-1 py-3" href="../dark/page-account-settings.html">
                            <iconify-icon icon="solar:settings-outline" class="text-warning iconify-sm me-2 ms-1"></iconify-icon>
                            Account Setting
                        </a>

                        <a class="dropdown-item d-flex py-3 pb-2" href="/Authentication/Logout">
                            <iconify-icon icon="solar:login-2-outline" class="text-danger iconify-sm me-2 ms-1"></iconify-icon>
                            Logout
                        </a>
                    </div>
                </div>
            </div>
        </li>
        <li class="mt-3 pt-3">
            <a href="javascript:void(0)" @onclick="() => AddAClientClick()" class="btn btn-block bg-primary text-white no-block d-flex align-items-center py-2 px-2 border-0">
                <iconify-icon icon="solar:add-square-linear" class="fs-5"></iconify-icon>
                <span class="hide-menu ms-2">Create New Client</span>
            </a>
        </li>


        <li class="nav-small-cap">
            <iconify-icon icon="solar:menu-dots-bold" class="nav-small-cap-icon fs-4"></iconify-icon>
            <span class="hide-menu">Production</span>
        </li>
        <li class="sidebar-item">
            <a class="sidebar-link sidebar-link" href="/" aria-expanded="false">
                <iconify-icon icon="solar:calendar-minimalistic-outline" class="fs-5"></iconify-icon>
                <span class="hide-menu">Clients</span>
            </a>
        </li>
        <li class="sidebar-item">
            <a class="sidebar-link has-arrow @(isSignalCollapsed ? "" : "active")" href="javascript:void(0)" @onclick="() => ToggleSignal()">
                <span class="d-flex">
                    <iconify-icon icon="solar:widget-4-outline" class="fs-5"></iconify-icon>
                </span>
                <span class="hide-menu">Signals</span>
            </a>
            <ul class="collapse first-level @(isSignalCollapsed ? "" : "in")">
                <li class="sidebar-item">
                    <a href="/Signals" class="sidebar-link sublink">
                        <div class="round-16 d-flex align-items-center justify-content-center">
                            <i class="sidebar-icon"></i>
                        </div>
                        <span class="hide-menu"> Overview </span>
                    </a>
                </li>
                <li class="sidebar-item">
                    <a href="/Signals/ManualSync" class="sidebar-link sublink">
                        <div class="round-16 d-flex align-items-center justify-content-center">
                            <i class="sidebar-icon"></i>
                        </div>
                        <span class="hide-menu"> Manual Sync </span>
                    </a>
                </li>
                <li class="sidebar-item">
                    <a href="/Signals/Logs" class="sidebar-link sublink">
                        <div class="round-16 d-flex align-items-center justify-content-center">
                            <i class="sidebar-icon"></i>
                        </div>
                        <span class="hide-menu"> Log </span>
                    </a>
                </li>
            </ul>
        </li>
        <li class="sidebar-item">
            <a class="sidebar-link sidebar-link" href="/Strategy" aria-expanded="false">
                <iconify-icon icon="solar:calendar-minimalistic-outline" class="fs-5"></iconify-icon>
                <span class="hide-menu">Strategies</span>
            </a>
        </li>

        <li class="nav-small-cap">
            <iconify-icon icon="solar:menu-dots-bold" class="nav-small-cap-icon fs-4"></iconify-icon>
            <span class="hide-menu">Order</span>
        </li>
        <li class="sidebar-item">
            <a class="sidebar-link sidebar-link" href="/Order" aria-expanded="false">
                <iconify-icon icon="solar:calendar-minimalistic-outline" class="fs-5"></iconify-icon>
                <span class="hide-menu">Order</span>
            </a>
        </li>

        @if(isAdmin) 
        {
            <li class="nav-small-cap">
                <iconify-icon icon="solar:menu-dots-bold" class="nav-small-cap-icon fs-4"></iconify-icon>
                <span class="hide-menu">Admin</span>
            </li>
            <li class="sidebar-item">
                <a class="sidebar-link sidebar-link" href="/Admin/Users" aria-expanded="false">
                    <iconify-icon icon="solar:calendar-minimalistic-outline" class="fs-5"></iconify-icon>
                    <span class="hide-menu">Users</span>
                </a>
            </li>
        }
        

    </ul>
</nav>

<ClientAddModal @ref="@_clientAddModal" OnClose="async () => await ReloadAsync()"></ClientAddModal>

@code {

    private bool isSignalCollapsed { get; set; } = true;
    private string email { get; set; } = string.Empty;
    private string name { get; set; } = string.Empty;
    private bool isAdmin { get; set; } = false;
    private ClientAddModal? _clientAddModal { get; set; } = null;

    protected async override Task OnInitializedAsync()
    {
        await ReloadAsync();
        email = await Membership.GetEmailAsync();
        name = await Membership.GetNameAsync();
        isAdmin = await Membership.IsAdminAsync(Guid.Parse("d0d4c576-8aa4-4f12-b42c-bc05b18349f4"));
    }



    void ToggleSignal()
    {
        isSignalCollapsed = !isSignalCollapsed;
    }

    public void Logout()
    {
        if (Membership.IsAuthenticated())
        {
            NavManager.NavigateTo(Membership.SignoutURL());
        }
    }

    private async Task AddAClientClick()
    {
        if (_clientAddModal != null)
        {
            await _clientAddModal.InitAsync(692803787);
        }
    }

    private async Task ReloadAsync()
    {
        await Task.Run(() => 1 + 1);
        StateHasChanged();
    }
}