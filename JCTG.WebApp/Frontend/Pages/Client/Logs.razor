@page "/Clients/{clientid:long}/Logs";
@inject LogRepository _logRepository;


<h1>Logs</h1>
<table cellpadding="1" cellspacing="0" width="100%" style="width:100%; border:1px solid black;">
    <tr>
        <th style="width:10%; border:1px solid gray; text-align:center;">ID</th>
        <th style="width:10%; border:1px solid gray; text-align:center;">Date</th>
        <th style="width:10%; border:1px solid gray; text-align:center;">Type</th>
        <th style="width:10%; border:1px solid gray; text-align:center;">Signal ID</th>
        <th style="width:30%; border:1px solid gray; text-align:center;">Message</th>
        <th style="width:30%; border:1px solid gray; text-align:center;">Description</th>
    </tr>
    @foreach (var log in _logs)
    {
        <tr>
            <td style="border:1px solid gray; text-align:center;">@log.ID</td>
            <td style="border:1px solid gray; text-align:center;">@log.DateCreated</td>
            <td style="border:1px solid gray; text-align:center;">@log.Type</td>
            <td style="border:1px solid gray; text-align:center;">@log.SignalID</td>
            <td style="border:1px solid gray; text-align:center;">@log.Message?.Replace(",", " ")</td>
            <td style="border:1px solid gray; text-align:center;">@log.Description?.Replace(",", " ")</td>
        </tr>
    }
</table>

@code {
    [Parameter]
    public long ClientId { get; set; }

    private List<Entity.Log> _logs = new();

    protected async override Task OnInitializedAsync()
    {
        _logs = await _logRepository.GetAllLast200(692803787, ClientId);
    }
}
