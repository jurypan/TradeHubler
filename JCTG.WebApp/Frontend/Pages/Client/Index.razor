@page "/Clients";
@inject ClientRepository _clientRepository;
@inject DealRepository _dealRepository;
@using JCTG.WebApp.Frontend.Components.Apex;
@using JCTG.WebApp.Frontend.Components.Widget;
@using JCTG.WebApp.Frontend.Components.Modal;

<div class="container-fluid mw-100">
    <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-4">
        <div class="card-body px-0">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="font-weight-medium ">Clients</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a class="text-primary text-decoration-none" href="/">
                                    Home
                                </a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">Clients</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <LastMonthWidget></LastMonthWidget>
                </div>
            </div>
        </div>
    </div>

    <div class="card card-body">
        <div class="row">
            <div class="col-md-12 col-xl-12 text-end d-flex justify-content-md-end justify-content-center mt-3 mt-md-0">
                <a class="btn btn-primary d-flex align-items-center" @onclick="() => AddAClientClick()">Add a client</a>
            </div>
        </div>
    </div>
    <div class="row">
        @foreach (var client in _clients)
        {
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex align-items-start">
                            <div>
                                <h4 class="card-title">@client.Name</h4>
                                <h6 class="card-subtitle">@client.Balance</h6>
                            </div>
                            <div class="ms-auto">
                                <div class="dropdown">
                                    <a href="#" class="link" id="new" data-bs-toggle="dropdown" aria-expanded="true">
                                        <iconify-icon icon="solar:menu-dots-bold" class="fs-5"></iconify-icon>
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="new">
                                        <li>
                                            <a class="dropdown-item" href="@($"Clients/{client.ID}/Edit")">Edit</a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" style="cursor:pointer;" @onclick="() => DeleteAClientClick(client.ID)">Delete</a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" style="cursor:pointer;" @onclick="() => CopyAClientClick(client.ID)">Copy</a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="@($"Clients/{client.ID}/Logs")">Logs</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="earnings-month mt-1">
                        <AreaChart @ref="@Ref" />
                    </div>
                    <div class="card-body">
                        <div class="row pb-3 border-bottom">
                            <div class="col-3">
                                <div class="bg-primary-subtle text-primary text-center py-2 rounded-1">
                                    <i class="ti ti-brand-dribbble fs-8"></i>
                                </div>
                            </div>
                            <div class="col-9 d-flex align-items-center">
                                <div>
                                    <a href="@($"Clients/{client.ID}/History")">
                                        <h5 class="card-title mb-1">History</h5>
                                        <p class="text-muted mb-0">
                                            History of this signal incl signal'' sl or tp
                                        </p>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="row py-3 border-bottom">
                            <div class="col-3">
                                <div class="bg-danger-subtle text-danger text-center py-2 rounded-1">
                                    <i class="ti ti-brand-youtube fs-8"></i>
                                </div>
                            </div>
                            <div class="col-9 d-flex align-items-center">
                                <div>
                                    <a href="@($"Clients/{client.ID}/Pairs")">
                                        <h5 class="card-title mb-1">Pairs</h5>
                                        <p class="text-muted mb-0">
                                            View every signal on Tradingview
                                        </p>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="row pt-3">
                            <div class="col-3">
                                <div class="bg-info-subtle text-info text-center py-2 rounded-1">
                                    <i class="ti ti-brand-messenger fs-8"></i>
                                </div>
                            </div>
                            <div class="col-9 d-flex align-items-center">
                                <div>
                                    <a href="@($"Clients/{client.ID}/Strategy")">
                                        <h5 class="card-title mb-1">Strategy</h5>
                                        <p class="text-muted mb-0">Insights into the strategy</p>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<ClientDeleteModal @ref="@_clientDeleteModal" OnClose="async () => await ReloadAsync()"></ClientDeleteModal>

<ClientCopyModal @ref="@_clientCopyModal" OnClose="async () => await ReloadAsync()"></ClientCopyModal>

<ClientAddModal @ref="@_clientAddModal" OnClose="async () => await ReloadAsync()"></ClientAddModal>

@code {
    public AreaChart Ref { set => _areaCharts.Add(value); }

    private List<Entity.Client> _clients = new();
    private List<AreaChart> _areaCharts = new();
    private List<Entity.Deal> _deals = new();
    string[] colors = { "#3699ff", "#6610f2", "#fb8c00", "#0bb7af", "#f64e60", "#4fc3f7", "#787f8e", "#e83e8c" };

    private ClientDeleteModal? _clientDeleteModal { get; set; } = null;
    private ClientCopyModal? _clientCopyModal { get; set; } = null;
    private ClientAddModal? _clientAddModal { get; set; } = null;

    protected async override Task OnInitializedAsync()
    {
        await ReloadAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Only on first render
        if (!firstRender || _areaCharts == null || _areaCharts.Count == 0)
            return;

        // Load the chart
        for (int i = 0; i < _clients.Count; i++)
        {
            _deals = await _dealRepository.GetAllLast25Async(_clients[i].ID);

            await _areaCharts[i].InitMiniAsync("Balance", _deals
            .Where(f => f.AccountBalance.HasValue && f.AccountBalance.Value > 0)
            .Select(x => new Components.Apex.AreaPoint()
                {
                    Time = x.DateCreated,
                    Price = x.AccountBalance.HasValue ? Convert.ToDecimal(x.AccountBalance.Value) : 0.0M
                }).OrderBy(f => f.Time)
                    .ToList(), colors[i % _clients.Count]);
        }
    }

    private async Task DeleteAClientClick(long id)
    {
        if (_clientDeleteModal != null)
        {
            await _clientDeleteModal.InitAsync(692803787, id);
        }
    }

    private async Task CopyAClientClick(long id)
    {
        if (_clientCopyModal != null)
        {
            await _clientCopyModal.InitAsync(692803787, id);
        }
    }

    private async Task AddAClientClick()
    {
        if (_clientAddModal != null)
        {
            await _clientAddModal.InitAsync(692803787);
        }
    }

    private async Task ReloadAsync()
    {
        _clients = await _clientRepository.GetAllAsync(692803787);
        StateHasChanged();
    }
}
