@page "/Clients/{clientid:long}/Edit";
@inject ClientRepository _clientRepository;
@inject ClientRiskRepository _clientRiskRepository;
@inject NavigationManager NavManager
@using JCTG.Models;
@using JCTG.WebApp.Frontend.Components.Widget;
@using JCTG.WebApp.Frontend.Components.Modal;

<div class="container-fluid mw-100">

    <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-4">
        <div class="card-body px-0">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="font-weight-medium ">@client?.Name</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a class="text-primary text-decoration-none" href="/">Home</a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                <a class="text-primary text-decoration-none" href="/">Clients</a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">Edit</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <LastMonthWidget></LastMonthWidget>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5>Edit client</h5>
                    <p class="card-subtitle mb-0">
                        To use add <mark><code>.r-separator</code></mark> class in the form with form styling.
                    </p>
                </div>
                <EditForm Model="@client" OnValidSubmit="@SubmitAsync" class="form-horizontal r-separator">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <AntiforgeryToken />
                    <div class="card-body">
                        <h5>Detail Info</h5>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Is enable</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <InputCheckbox class="form-check-input" @bind-Value="client.IsEnable" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">ID</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <InputText class="form-control" @bind-Value="client.IDAsString" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Name</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <InputText class="form-control" @bind-Value="client.Name" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Start Balance</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <InputText class="form-control" @bind-Value="client.StartBalanceAsString" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">MetaTrader Directory Path</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <InputText class="form-control" @bind-Value="client.MetaTraderDirPath" />
                            </div>
                        </div>
                    </div>
                    <div class="card-body text-bg-light">
                        <h4 class="card-title mt-2 pb-3">Options</h4>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Currency</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <input type="text" class="form-control" disabled="disabled" value="@client.Currency" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Balance</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <input type="text" class="form-control" disabled="disabled" value="@client.Balance" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Equity</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <input type="text" class="form-control" disabled="disabled" value="@client.Equity" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center mb-0">
                            <label for="inputEmail3" class="col-3 text-end control-label col-form-label">Leverage</label>
                            <div class="col-9 border-start pb-2 pt-2">
                                <input type="text" class="form-control" disabled="disabled" value="@client.Leverage" />
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-0 text-end">
                            <button type="submit" class="btn btn-primary rounded-pill px-4"> Save </button>
                            <a href="/" class="btn bg-danger-subtle text-danger rounded-pill px-4 ms-6"> Cancel </a>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

    <div class="card w-100 position-relative overflow-hidden">
        <div class="card card-body">
            <div class="row">
                <div class="col-md-4 col-xl-3">
                    <h5 class="card-title fw-semibold mb-0 lh-sm">Pairs</h5>
                </div>
                <div class="col-md-8 col-xl-9 text-end d-flex justify-content-md-end justify-content-center mt-3 mt-md-0">
                    <a href="javascript:void(0)" class="btn btn-primary d-flex align-items-center" @onclick="() => ClientPairAddClick()">Add a pair</a>
                </div>
            </div>
        </div>
        @if (client != null)
        {
            if (client.Pairs != null && client.Pairs.Count > 0)
            {
                <div class="card-body p-4">
                    <div class="table-responsive rounded-2 mb-4">
                        <table class="table border text-nowrap customize-table mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Ticker in Tradingview</h6>
                                    </th>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Ticker in Metatrader</h6>
                                    </th>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Strategy</h6>
                                    </th>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Timeframe</h6>
                                    </th>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Risk</h6>
                                    </th>

                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var pair in client?.Pairs)
                                {
                                    <tr>
                                        <td>
                                            <h6 class="fs-4 fw-semibold mb-0">@pair.TickerInTradingView</h6>
                                        </td>
                                        <td>
                                            <p class="mb-0 fw-normal">@pair.TickerInMetatrader</p>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center gap-2">
                                                <span class="badge text-bg-primary rounded-3 fw-semibold fs-2">Strategy @((int)pair.StrategyID)</span>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="mb-0 fw-normal">@pair.Timeframe</p>
                                        </td>
                                        <td>
                                            <p class="mb-0 fw-normal">@pair.RiskLong</p>
                                        </td>
                                        <td>
                                            <div class="dropdown dropstart">
                                                <a href="#" class="text-muted" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class="ti ti-dots-vertical fs-6"></i>
                                                </a>
                                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <li>
                                                        <a href="javascript:void(0)" class="dropdown-item d-flex align-items-center gap-3" @onclick="() => ClientPairEditClick(pair.ID)">Edit</a>
                                                    </li>
                                                    <li>
                                                        <a href="javascript:void(0)" class="dropdown-item d-flex align-items-center gap-3" @onclick="() => ClientPairDeleteClick(pair.ID)">Delete</a>
                                                    </li> 
                                                    <li>
                                                        <a href="javascript:void(0)" class="dropdown-item d-flex align-items-center gap-3" @onclick="async () => await ClientPairCopyClick(pair.ID)">Copy</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            else
            {
                <div class="card-body text-center">
                    <h3 class="fw-semibold">No pairs available for this client</h3>
                    <p class="fw-normal mb-4 fs-4">Without pairs it's impossible to take trades</p>
                    <a href="javascript:void(0)" class="btn btn-primary mb-8" @onclick="() => ClientPairAddClick()">Add a pair</a>
                </div>
            }
        }
        else
        {
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }

    </div>

    <div class="card w-100 position-relative overflow-hidden">
        <div class="card card-body">
            <div class="row">
                <div class="col-md-4 col-xl-3">
                    <h5 class="card-title fw-semibold mb-0 lh-sm">Risks</h5>
                </div>
                <div class="col-md-8 col-xl-9 text-end d-flex justify-content-md-end justify-content-center mt-3 mt-md-0">
                    <a href="javascript:void(0)" class="btn btn-primary d-flex align-items-center" @onclick="() => ClientRiskAddClick()">Add a risk definition</a>
                </div>
            </div>
        </div>
        @if (client != null)
        {
            if (client.Risks != null && client.Risks.Count > 0)
            {
                <div class="card-body p-4">
                    <div class="table-responsive rounded-2 mb-4">
                        <table class="table border text-nowrap customize-table mb-0 align-middle">
                            <thead class="text-dark fs-4">
                                <tr>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Procent</h6>
                                    </th>
                                    <th>
                                        <h6 class="fs-4 fw-semibold mb-0">Multiplier</h6>
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var risk in client?.Risks?.OrderBy(f => f.Procent))
                                {
                                    <tr>
                                        <td>
                                            <h6 class="fs-4 fw-semibold mb-0">@risk.Procent</h6>
                                        </td>
                                        <td>
                                            <p class="mb-0 fw-normal">@risk.Multiplier</p>
                                        </td>
                                        <td>
                                            <div class="dropdown dropstart">
                                                <a href="#" class="text-muted" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class="ti ti-dots-vertical fs-6"></i>
                                                </a>
                                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <li>
                                                        <a href="javascript:void(0)" class="dropdown-item d-flex align-items-center gap-3" @onclick="() => ClientRiskEditClick(risk.ID)">Edit</a>
                                                    </li>
                                                    <li>
                                                        <a href="javascript:void(0)" class="dropdown-item d-flex align-items-center gap-3" @onclick="() => ClientRiskDeleteClick(risk.ID)">Delete</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            else
            {
                <div class="card-body text-center">
                    <h3 class="fw-semibold">No risk is defined for this client</h3>
                    <p class="fw-normal mb-4 fs-4">Without at least 1 risk definition, it's impossible to take trades</p>
                    <a href="javascript:void(0)" class="btn btn-primary mb-8" @onclick="async () => await ClientRiskAddTemplateClick()">Add default template</a>
                </div>
            }
        }
        else
        {
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
    </div>
</div>


<ClientPairAddOrEditModal @ref="@_clientPairAddOrEditModal" OnClose="async () => await ReloadAsync()"></ClientPairAddOrEditModal>

<ClientPairDeleteModal @ref="@_clientPairDeleteModal" OnClose="async () => await ReloadAsync()"></ClientPairDeleteModal>

<ClientRiskAddOrEditModal @ref="@_clientRiskAddOrEditModal" OnClose="async () => await ReloadAsync()"></ClientRiskAddOrEditModal>

<ClientRiskDeleteModal @ref="@_clientRiskDeleteModal" OnClose="async () => await ReloadAsync()"></ClientRiskDeleteModal>

@code {

    [Parameter]
    public long ClientId { get; set; }

    [SupplyParameterFromForm]
    private Entity.Client client { get; set; } = new Client() { Name = string.Empty };


    private ClientPairAddOrEditModal? _clientPairAddOrEditModal { get; set; } = null;
    private ClientPairDeleteModal? _clientPairDeleteModal { get; set; } = null;
    private ClientRiskAddOrEditModal? _clientRiskAddOrEditModal { get; set; } = null;
    private ClientRiskDeleteModal? _clientRiskDeleteModal { get; set; } = null;


    protected async override Task OnInitializedAsync()
    {
        await ReloadAsync();
    }

    private async Task ReloadAsync()
    {
        client = await _clientRepository.GetByIdAsync(692803787, ClientId);
    }

    private async Task ClientPairAddClick()
    {
        if (_clientPairAddOrEditModal != null)
        {
            await _clientPairAddOrEditModal.InitAsync(692803787, ClientId);
        }
    }

    private async Task ClientPairEditClick(long id)
    {
        if (_clientPairAddOrEditModal != null)
        {
            await _clientPairAddOrEditModal.InitAsync(692803787, ClientId, id);
        }
    }

    private async Task ClientPairCopyClick(long id)
    {
        if (_clientPairAddOrEditModal != null)
        {
            await _clientPairAddOrEditModal.CopyAsync(692803787, ClientId, id);
        }
    }

    private async Task ClientPairDeleteClick(long id)
    {
        if (_clientPairDeleteModal != null)
        {
            await _clientPairDeleteModal.InitAsync(692803787, ClientId, id);
        }
    }


    private async Task ClientRiskAddClick()
    {
        if (_clientRiskAddOrEditModal != null)
        {
            await _clientRiskAddOrEditModal.InitAsync(692803787, ClientId);
        }
    }

    private async Task ClientRiskEditClick(long id)
    {
        if (_clientRiskAddOrEditModal != null)
        {
            await _clientRiskAddOrEditModal.InitAsync(692803787, ClientId, id);
        }
    }

    private async Task ClientRiskCopyClick(long id)
    {
        if (_clientRiskAddOrEditModal != null)
        {
            await _clientRiskAddOrEditModal.CopyAsync(692803787, ClientId, id);
        }
    }

    private async Task ClientRiskDeleteClick(long id)
    {
        if (_clientRiskDeleteModal != null)
        {
            await _clientRiskDeleteModal.InitAsync(692803787, ClientId, id);
        }
    }

    private async Task ClientRiskAddTemplateClick()
    {
        await _clientRiskRepository.AddTemplateAsync(ClientId);
        await ReloadAsync();
    }








    private async Task SubmitAsync()
    {
        if (client != null)
        {
            await _clientRepository.EditAsync(692803787, client);
            var clientNew = await _clientRepository.GetByIdAsync(692803787, ClientId);
            if (clientNew != null)
                client = clientNew;
            NavManager.NavigateTo("/");
        }
    }
}
