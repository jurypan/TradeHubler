@page "/Clients/{clientid:long}/History";
@inject ClientRepository _clientRepository;
@inject DealRepository _dealRepository;
@using JCTG.WebApp.Frontend.Components.Tradingview

<h1>History</h1>

<Chart @ref=tv />

@code {
    [Parameter]
    public long ClientId { get; set; }

    Chart? tv;
    IEnumerable<Deal>? deals;
    Client? client;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Only on first render
        if (!firstRender || tv == null)
            return;

        // Get data from database
        deals = await _dealRepository.GetAll(this.ClientId);
        client = await _clientRepository.GetById(692803787, this.ClientId);

        // Init tradingview Chart
        await tv.InitAsync(new()
            {
                Width = -75,
                Height = 1000,
            });

        // Do null reference check
        if(tv.IsInit)
        {
            // Load the chart
            await tv.AddLineSeriesAsync(deals.Where(f => f.AccountBalance.HasValue).Select(x => new PricePoint()
                {
                    Time = x.DateCreated,
                    Price = x.AccountBalance.HasValue ? Convert.ToDecimal(x.AccountBalance.Value) : 0.0M,
                    Volume = 0.0M
                }).OrderBy(f => f.Time).ToList());
        }
    }
}
