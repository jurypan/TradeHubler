@page "/Signals/{signalid:long}/Orders";
@inject SignalRepository _signalRepository;
@inject ClientRepository _clientRepository;

<div class="container-fluid mw-100">

    <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-4">
        <div class="card-body px-0">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="font-weight-medium ">Joeri</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a class="text-primary text-decoration-none" href="/">
                                    Home
                                </a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                <a class="text-primary text-decoration-none" href="/Signals">
                                    Signals
                                </a>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                Orders
                            </li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <div class="d-flex no-block justify-content-end align-items-center">
                        <div class="me-2">
                            <div class="breadbar"></div>
                        </div>
                        <div class="">
                            <small>LAST MONTH</small>
                            <h4 class="text-primary mb-0 font-medium">$58,256</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="d-flex border-bottom title-part-padding px-0 mb-3 align-items-center">
        <div>
            <h4 class="mb-0 fs-5">Clients <b>with</b> orders for this signal</h4>
        </div>
    </div>
    <div class="row">
        @foreach (var order in _orders)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card rounded-3 card-hover">
                    <a href="@($"Signals/{SignalId}/Orders/{order.Client?.ID}/Logs")" class="stretched-link"></a>
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <span class="flex-shrink-0"><i class="ti ti-folder-down text-danger display-6"></i></span>
                            <div class="ms-4">
                                <h4 class="card-title text-dark">@order.Client?.Name</h4>
                                <h6 class="card-subtitle mb-0 fs-2 fw-normal mb-1">@order.Client?.Currency @order.Client?.Balance</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>


    <div class="d-flex border-bottom title-part-padding px-0 mb-3 align-items-center">
        <div>
            <h4 class="mb-0 fs-5">Clients <b>without</b> orders for this signal</h4>
        </div>
    </div>
    <div class="row">
        @foreach (var client in _clients)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card rounded-3 card-hover">
                    <a href="@($"Signals/{SignalId}/Orders/{client.ID}/Logs")" class="stretched-link"></a>
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <span class="flex-shrink-0"><i class="ti ti-folder-down text-danger display-6"></i></span>
                            <div class="ms-4">
                                <h4 class="card-title text-dark">@client.Name</h4>
                                <h6 class="card-subtitle mb-0 fs-2 fw-normal mb-1">@client.Currency @client.Balance</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="datatables">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-2">
                                <h5 class="mb-0">File export</h5>
                            </div>
                            <p class="card-subtitle mb-3">
                                Exporting data from a table can often be a key part of a
                                complex application. The Buttons extension for DataTables
                                provides three plug-ins that provide overlapping
                                functionality for data export. You can refer full
                                documentation from here
                                <a href="https://datatables.net/">Datatables</a>
                            </p>
                            <div class="table-responsive">
                                <table id="file_export" class="table border table-striped table-bordered display text-nowrap">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Magic</th>
                                            <th>Date Created</th>
                                            <th>Date Last Updated</th>
                                            <th>Instrument</th>
                                            <th>Order Type</th>
                                            <th>State</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var signal in _signals)
                                        {
                                            <tr>
                                                <td>@signal.ID</td>
                                                <td>@signal.Magic</td>
                                                <td>@signal.DateCreated</td>
                                                <td>@signal.DateLastUpdated</td>
                                                <td>@signal.Instrument</td>
                                                <td>@signal.OrderType</td>
                                                <td>@signal.TradingviewStateType</td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th>ID</th>
                                            <th>Magic</th>
                                            <th>Date Created</th>
                                            <th>Date Last Updated</th>
                                            <th>Instrument</th>
                                            <th>Order Type</th>
                                            <th>State</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public long SignalId { get; set; }

    private Entity.Signal? _signal = null;
    private List<Entity.Order> _orders = new List<Entity.Order>();
    private List<Entity.Client> _clients = new List<Entity.Client>();
    private List<Entity.Signal> _signals = new List<Entity.Signal>();

    protected async override Task OnInitializedAsync()
    {
        _signal = await _signalRepository.GetById(692803787, SignalId);

        var clients = await _clientRepository.GetAllAsync(692803787);

        if (_signal != null)
        {
            _signals = await _signalRepository.GetAll(692803787, _signal.Instrument, _signal.OrderType, _signal.StrategyType);
            _orders = _signal.Orders;
        }

        foreach (var client in clients)
        {
            if (!_orders.Any(f => f.ClientID == client.ID))
            {
                _clients.Add(client);
            }
        }
    }
}
