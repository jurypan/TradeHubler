@page "/Signals/Logs";
@inject TradingviewAlertRepository _tradingviewAlertRepository;
@using JCTG.WebApp.Frontend.Components.Widget;
@using JCTG.Models;

<div class="container-fluid mw-100">

    <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-4">
        <div class="card-body px-0">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="font-weight-medium ">Joeri</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a class="text-primary text-decoration-none" href="/">
                                    Home
                                </a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                <a class="text-primary text-decoration-none" href="/Signals">
                                    Signals
                                </a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                Logs
                            </li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <LastMonthWidget></LastMonthWidget>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="datatables">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-2">
                                <h5 class="mb-0">Logs</h5>
                            </div>
                            <div class="table-responsive">
                                <table class="table border table-striped table-bordered display text-nowrap">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Signal Id</th>
                                            <th>Date Created</th>
                                            <th>Type</th>
                                            <th>Strategy</th>
                                            <th>Instrument</th>
                                            <th>Message</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var alert in _alerts)
                                        {
                                            <tr>
                                                <td>@alert.ID</td>
                                                <td>@alert.SignalID</td>
                                                <td>@alert.DateCreated</td>
                                                <td>@alert.Type</td>
                                                <td>
                                                    <div class="d-flex align-items-center gap-2">
                                                        @if (alert.Signal.StrategyType == StrategyType.Strategy1)
                                                        {
                                                            <span class="badge text-bg-primary rounded-3 fw-semibold fs-2">Strategy 1</span>
                                                        }
                                                        else if (alert.Signal.StrategyType == StrategyType.Strategy2)
                                                        {
                                                            <span class="badge text-bg-success rounded-3 fw-semibold fs-2">Strategy 2</span>
                                                        }
                                                        else if (alert.Signal.StrategyType == StrategyType.Strategy3)
                                                        {
                                                            <span class="badge text-bg-secondary rounded-3 fw-semibold fs-2">Strategy 3</span>
                                                        }
                                                        else if (alert.Signal.StrategyType == StrategyType.Strategy4)
                                                        {
                                                            <span class="badge text-bg-danger rounded-3 fw-semibold fs-2">Strategy 4</span>
                                                        }
                                                        else if (alert.Signal.StrategyType == StrategyType.Strategy5)
                                                        {
                                                            <span class="badge text-bg-indigo rounded-3 fw-semibold fs-2">Strategy 5</span>
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    <h6 class="fs-4 fw-semibold mb-0">@alert.Signal.Instrument</h6>
                                                    <p class="mb-0 fw-normal">@alert.Signal.OrderType</p>
                                                </td>
                                                <td>@((MarkupString)alert.RawMessage.Replace("||", "<br />").Replace(",", "<br />"))</td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th>ID</th>
                                            <th>Signal Id</th>
                                            <th>Date Created</th>
                                            <th>Type</th>
                                            <th>Strategy</th>
                                            <th>Instrument</th>
                                            <th>Message</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {


    private List<Entity.TradingviewAlert> _alerts = new();

    protected async override Task OnInitializedAsync()
    {
        _alerts = await _tradingviewAlertRepository.GetAllLast200(692803787);
    }
}
