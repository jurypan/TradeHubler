@page "/Signals/{signalid:long}/Orders/{clientid:long}/Logs";
@inject LogRepository _logRepository;
@inject NavigationManager _navigationManager;

<div class="container-fluid mw-100">

    <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-4">
        <div class="card-body px-0">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="font-weight-medium ">Joeri</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a class="text-primary text-decoration-none" href="/">
                                    Home
                                </a>
                            </li>
                            <li class="breadcrumb-item d-flex justify-content-center align-items-center ps-0">
                                <iconify-icon icon="tabler:chevron-right"></iconify-icon>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                <a class="text-primary text-decoration-none" href="/Signals">
                                    Signals
                                </a>
                            </li>
                            <li class="breadcrumb-item" aria-current="page">
                                Order Log
                            </li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <div class="d-flex no-block justify-content-end align-items-center">
                        <div class="me-2">
                            <div class="breadbar"></div>
                        </div>
                        <div class="">
                            <small>LAST MONTH</small>
                            <h4 class="text-primary mb-0 font-medium">$58,256</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="datatables">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="mb-2">
                                <h5 class="mb-0">Signals</h5>
                            </div>
                            <p class="card-subtitle mb-3">
                                Exporting data from a table can often be a key part of a
                                complex application. The Buttons extension for DataTables
                                provides three plug-ins that provide overlapping
                                functionality for data export. You can refer full
                                documentation from here
                                <a href="https://datatables.net/">Datatables</a>
                            </p>
                            <div class="table-responsive">
                                <table id="file_export" class="table border table-striped table-bordered display text-nowrap">
                                    <thead>
                                        <tr>
                                            <th>Date Created</th>
                                            <th>Type</th>
                                            <th>Error Type</th>
                                            <th>Message</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var log in _logs)
                                        {
                                            <tr>
                                                <td>@log.DateCreated</td>
                                                <td>@log.Type</td>
                                                <td>@log.ErrorType</td>
                                                <td>
                                                    @if (log.Description == null)
                                                    {
                                                        @((MarkupString)log.Message?.Replace("||", "<br />").Replace(",", "<br />"))
                                                    }
                                                    else
                                                    {
                                                        @((MarkupString)log.Message?.Replace("||", "<br />").Replace(",", "<br />"))
                                                        @((MarkupString)log.Description?.Replace("||", "<br />").Replace(",", "<br />"))
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th>Date Created</th>
                                            <th>Type</th>
                                            <th>Error Type</th>
                                            <th>Message</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>



@code {

    [Parameter]
    public long SignalId { get; set; }

    [Parameter]
    public long ClientId { get; set; }


    private List<Entity.Log> _logs = new List<Entity.Log>();
    private readonly Serilog.ILogger _logger = Serilog.Log.ForContext<Log>();

    protected async override Task OnInitializedAsync()
    {
        _logger.Debug($"OnInitializedAsync with signal id {SignalId}");
        _logs = await _logRepository.GetAll(692803787, SignalId, ClientId);
    }
}
