{"@t":"2024-07-08T09:37:51.0653046Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 09:37:51Z - 066809f3-46de-4a72-b2c5-bf752851caaf] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"d2801d416cbaafcd2e718eec44af7003","@sp":"daf9c199219b192b","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V66D7BR0E:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V66D7BR0E","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T09:44:41.7356353Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 09:44:41Z - b405223c-bf44-4d9b-a8f5-2e94efba9d09] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"3bc88fbafc716f622e5cad32ddda1138","@sp":"82f9d79ae9ce05f3","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V6A9RMA4F:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V6A9RMA4F","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T11:02:01.9517050Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 11:02:01Z - e2a934ee-2620-4144-bb89-e4cbae013eb5] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"735890e24d33d80c7ac7f08e8d0018b0","@sp":"6cc8cd826847f182","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V7L5CJV9L:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V7L5CJV9L","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:19:06.6843239Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:19:06Z - 00a9fb08-0bf7-463c-8698-36378f75a4c0] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"7d0dc7a360a8614541a54d96a694b07d","@sp":"a69743746d54750d","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V90INSK3T:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V90INSK3T","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:20:38.2580673Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:20:38Z - 2a578659-f826-44dc-b308-dd464908eef0] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"0a3e1bd5a827a0cd3bb2dd43157311e0","@sp":"45ee569d455d607d","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V917AMH8G:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V917AMH8G","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:36:46.3280936Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:36:46Z - a2046054-8e4e-44d3-8dda-50969bb3c006] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"03237d0c31e63821994bd57c4093460c","@sp":"3e8a3242968de527","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V9AEL3MSJ:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9AEL3MSJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:36:57.4183241Z","@mt":"Unhandled exception rendering component: {Message}","@l":"Warning","@x":"System.InvalidOperationException: StatusCode cannot be set because the response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)\r\n   at Microsoft.AspNetCore.Http.DefaultHttpResponse.Redirect(String location, Boolean permanent)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.SignOutAsync(AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignOutAsync(HttpContext context, String scheme, AuthenticationProperties properties)\r\n   at JCTG.WebApp.Frontend.Pages.Authentication.Logout.OnInitializedAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Pages\\Authentication\\Logout.razor:line 18\r\n   at Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()","@tr":"72304ad048e37653626e149f7aacd6a2","@sp":"1f581ac35255139e","Message":"StatusCode cannot be set because the response has already started.","EventId":{"Id":100,"Name":"ExceptionRenderingComponent"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteRenderer","TransportConnectionId":"mkUFXaypfX11NxQmePdz4g","RequestId":"0HN4V9AEL3MSJ:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4V9AEL3MSJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:36:57.4427554Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"System.InvalidOperationException: StatusCode cannot be set because the response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)\r\n   at Microsoft.AspNetCore.Http.DefaultHttpResponse.Redirect(String location, Boolean permanent)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.SignOutAsync(AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignOutAsync(HttpContext context, String scheme, AuthenticationProperties properties)\r\n   at JCTG.WebApp.Frontend.Pages.Authentication.Logout.OnInitializedAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Pages\\Authentication\\Logout.razor:line 18\r\n   at Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()","@tr":"72304ad048e37653626e149f7aacd6a2","@sp":"1f581ac35255139e","CircuitId":"94ss4oLvBk6BLENLBPTkayDIiFIfwjlwG8tIaHTyhFQ","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"mkUFXaypfX11NxQmePdz4g","RequestId":"0HN4V9AEL3MSJ:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4V9AEL3MSJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:36:57.5153890Z","@mt":"Unhandled exception rendering component: {Message}","@l":"Warning","@x":"System.ObjectDisposedException: Cannot access a disposed object.\r\n   at Microsoft.AspNetCore.Components.RenderTree.ArrayBuilder`1.GrowBuffer(Int32 desiredCapacity)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(DiffContext& diffContext, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, Int32 componentId, ArrayRange`1 oldTree, ArrayRange`1 newTree)\r\n   at Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment, Exception& renderFragmentException)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.RenderInExistingBatch(RenderQueueEntry renderQueueEntry)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()","@tr":"72304ad048e37653626e149f7aacd6a2","@sp":"1f581ac35255139e","Message":"Cannot access a disposed object.","EventId":{"Id":100,"Name":"ExceptionRenderingComponent"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteRenderer","TransportConnectionId":"mkUFXaypfX11NxQmePdz4g","RequestId":"0HN4V9AEL3MSJ:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4V9AEL3MSJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:36:57.5160450Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"System.ObjectDisposedException: Cannot access a disposed object.\r\n   at Microsoft.AspNetCore.Components.RenderTree.ArrayBuilder`1.GrowBuffer(Int32 desiredCapacity)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(DiffContext& diffContext, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, Int32 componentId, ArrayRange`1 oldTree, ArrayRange`1 newTree)\r\n   at Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment, Exception& renderFragmentException)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.RenderInExistingBatch(RenderQueueEntry renderQueueEntry)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()","@tr":"72304ad048e37653626e149f7aacd6a2","@sp":"1f581ac35255139e","CircuitId":"94ss4oLvBk6BLENLBPTkayDIiFIfwjlwG8tIaHTyhFQ","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"mkUFXaypfX11NxQmePdz4g","RequestId":"0HN4V9AEL3MSJ:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4V9AEL3MSJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:40:00.6165804Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:40:00Z - ccc0e74e-b55e-480e-b3be-82c1e1a596b1] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"bcfca694437825e416c97efc8fb17713","@sp":"02b1a9534f9a0e85","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V9C8F90AJ:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9C8F90AJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:40:26.5725146Z","@mt":"Unable to configure Browser Link script injection on the response. ","@l":"Warning","@tr":"dfb6fda9169f75d0bcbc5db7b884a193","@sp":"184dd2e3767a1e5e","EventId":{"Id":3,"Name":"FailedToConfigureForBrowserLink"},"SourceContext":"Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware","RequestId":"0HN4V9C8F90AJ:0000001F","RequestPath":"/MicrosoftIdentity/Account/SignedOut","ConnectionId":"0HN4V9C8F90AJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:40:26.5744169Z","@mt":"Unable to configure browser refresh script injection on the response. Consider manually adding '<script src=\"/_framework/aspnetcore-browser-refresh.js\"></script>' to the body of the page.","@l":"Warning","@tr":"dfb6fda9169f75d0bcbc5db7b884a193","@sp":"184dd2e3767a1e5e","EventId":{"Id":3,"Name":"FailedToConfiguredForRefreshes"},"SourceContext":"Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware","RequestId":"0HN4V9C8F90AJ:0000001F","RequestPath":"/MicrosoftIdentity/Account/SignedOut","ConnectionId":"0HN4V9C8F90AJ","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:41:45.6755141Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:41:45Z - 7a5e707e-2a39-4307-be43-de2a73251a91] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"fcd8e37722e0adcd1b9a3752ec0bf9da","@sp":"0ee7d4c7cddbaff5","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V9D7VDRVS:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9D7VDRVS","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:41:59.0597875Z","@mt":"Unable to configure Browser Link script injection on the response. ","@l":"Warning","@tr":"864aee030eb51d961d2c22391627536f","@sp":"59fcbb4e66710d3d","EventId":{"Id":3,"Name":"FailedToConfigureForBrowserLink"},"SourceContext":"Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware","RequestId":"0HN4V9D7VDRVT:0000001F","RequestPath":"/MicrosoftIdentity/Account/SignedOut","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:41:59.0683565Z","@mt":"Unable to configure browser refresh script injection on the response. Consider manually adding '<script src=\"/_framework/aspnetcore-browser-refresh.js\"></script>' to the body of the page.","@l":"Warning","@tr":"864aee030eb51d961d2c22391627536f","@sp":"59fcbb4e66710d3d","EventId":{"Id":3,"Name":"FailedToConfiguredForRefreshes"},"SourceContext":"Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware","RequestId":"0HN4V9D7VDRVT:0000001F","RequestPath":"/MicrosoftIdentity/Account/SignedOut","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:42:05.7897229Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:42:05Z - 950f0a2c-9264-44d7-90fe-7b5fe7d18051] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"50f1cad1b2740defa10a517310ee41d4","@sp":"70068fb608827583","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V9D7VDRVT:00000025","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:42:09.8801525Z","@mt":"Unable to configure Browser Link script injection on the response. ","@l":"Warning","@tr":"19b60b3dae4570367cb512861e673a92","@sp":"10d77eb2e101bcd9","EventId":{"Id":3,"Name":"FailedToConfigureForBrowserLink"},"SourceContext":"Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware","RequestId":"0HN4V9D7VDRVT:00000043","RequestPath":"/MicrosoftIdentity/Account/SignedOut","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:42:09.8803520Z","@mt":"Unable to configure browser refresh script injection on the response. Consider manually adding '<script src=\"/_framework/aspnetcore-browser-refresh.js\"></script>' to the body of the page.","@l":"Warning","@tr":"19b60b3dae4570367cb512861e673a92","@sp":"10d77eb2e101bcd9","EventId":{"Id":3,"Name":"FailedToConfiguredForRefreshes"},"SourceContext":"Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware","RequestId":"0HN4V9D7VDRVT:00000043","RequestPath":"/MicrosoftIdentity/Account/SignedOut","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:42:59.0457111Z","@mt":"Navigation failed when changing the location to {Uri}","@l":"Error","@x":"System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at Microsoft.JSInterop.JSRuntime.InvokeAsync[TValue](Int64 targetInstanceId, String identifier, Object[] args)\r\n   at Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(IJSRuntime jsRuntime, String identifier, Object[] args)\r\n   at Microsoft.AspNetCore.Components.Server.Circuits.RemoteNavigationManager.<>c__DisplayClass13_0.<<NavigateToCore>g__PerformNavigationAsync|0>d.MoveNext()","@tr":"e7aedcfdbaa78b05d543fc0ad3726b61","@sp":"e401d69168f49d5c","Uri":"https://justcalltheguy.b2clogin.com/","EventId":{"Id":4,"Name":"NavigationFailed"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteNavigationManager","TransportConnectionId":"FbGxhfbLzQXpc1prPqVrWg","RequestId":"0HN4V9D7VDRVT:0000000D","RequestPath":"/_blazor","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:42:59.0558198Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at Microsoft.JSInterop.JSRuntime.InvokeAsync[TValue](Int64 targetInstanceId, String identifier, Object[] args)\r\n   at Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(IJSRuntime jsRuntime, String identifier, Object[] args)\r\n   at Microsoft.AspNetCore.Components.Server.Circuits.RemoteNavigationManager.<>c__DisplayClass13_0.<<NavigateToCore>g__PerformNavigationAsync|0>d.MoveNext()","@tr":"e7aedcfdbaa78b05d543fc0ad3726b61","@sp":"e401d69168f49d5c","CircuitId":"G1c7C6xbsnaPwMxCFRNahaJ7oR68Tbb_-6oGnqi1BO4","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"FbGxhfbLzQXpc1prPqVrWg","RequestId":"0HN4V9D7VDRVT:0000000D","RequestPath":"/_blazor","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:43:09.8922882Z","@mt":"Navigation failed when changing the location to {Uri}","@l":"Error","@x":"System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at Microsoft.JSInterop.JSRuntime.InvokeAsync[TValue](Int64 targetInstanceId, String identifier, Object[] args)\r\n   at Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(IJSRuntime jsRuntime, String identifier, Object[] args)\r\n   at Microsoft.AspNetCore.Components.Server.Circuits.RemoteNavigationManager.<>c__DisplayClass13_0.<<NavigateToCore>g__PerformNavigationAsync|0>d.MoveNext()","@tr":"bf717a95b2506c458697ae5951b12da8","@sp":"8856db0a2b90e573","Uri":"https://justcalltheguy.b2clogin.com/","EventId":{"Id":4,"Name":"NavigationFailed"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteNavigationManager","TransportConnectionId":"fZiMEGYhv6NipqZP0FVwRQ","RequestId":"0HN4V9D7VDRVT:00000033","RequestPath":"/_blazor","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:43:09.8932060Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at Microsoft.JSInterop.JSRuntime.InvokeAsync[TValue](Int64 targetInstanceId, String identifier, Object[] args)\r\n   at Microsoft.JSInterop.JSRuntimeExtensions.InvokeVoidAsync(IJSRuntime jsRuntime, String identifier, Object[] args)\r\n   at Microsoft.AspNetCore.Components.Server.Circuits.RemoteNavigationManager.<>c__DisplayClass13_0.<<NavigateToCore>g__PerformNavigationAsync|0>d.MoveNext()","@tr":"bf717a95b2506c458697ae5951b12da8","@sp":"8856db0a2b90e573","CircuitId":"zUf0tw3wdl4fmwGzzkwgdcA8rb7r7JKjDU41WoRU91w","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"fZiMEGYhv6NipqZP0FVwRQ","RequestId":"0HN4V9D7VDRVT:00000033","RequestPath":"/_blazor","ConnectionId":"0HN4V9D7VDRVT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:52:18.8791310Z","@mt":"Microsoft.IdentityModel Version: 7.6.0.0. Date 07/08/2024 12:52:18. PII logging is ON, do not use in production. See https://aka.ms/IdentityModel/PII for details. \r\nIDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.","@l":"Error","@tr":"f553f8d44dc6785b9689d2e7783ce26e","@sp":"8ed2d779200009d1","SourceContext":"Microsoft.IdentityModel.LoggingExtensions.IdentityLoggerAdapter","RequestId":"0HN4V9J25Q8KK:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9J25Q8KK","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:52:18.9065214Z","@mt":"Exception occurred while processing message.","@l":"Error","@x":"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: IDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.\r\n   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(OpenIdConnectProtocolValidationContext validationContext)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()","@tr":"f553f8d44dc6785b9689d2e7783ce26e","@sp":"8ed2d779200009d1","EventId":{"Id":17,"Name":"ExceptionProcessingMessage"},"SourceContext":"Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler","RequestId":"0HN4V9J25Q8KK:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9J25Q8KK","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:52:18.9230349Z","@mt":"An unhandled exception has occurred while executing the request.","@l":"Error","@x":"Microsoft.AspNetCore.Authentication.AuthenticationFailureException: An error was encountered while handling the remote login.\r\n ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: IDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.\r\n   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(OpenIdConnectProtocolValidationContext validationContext)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","@tr":"f553f8d44dc6785b9689d2e7783ce26e","@sp":"8ed2d779200009d1","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN4V9J25Q8KK:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9J25Q8KK","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:53:12.5582387Z","@mt":"Microsoft.IdentityModel Version: 7.6.0.0. Date 07/08/2024 12:53:12. PII logging is ON, do not use in production. See https://aka.ms/IdentityModel/PII for details. \r\nIDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.","@l":"Error","@tr":"aa5a57af126303c26b865dcf966859fa","@sp":"0b2f01d845becb95","SourceContext":"Microsoft.IdentityModel.LoggingExtensions.IdentityLoggerAdapter","RequestId":"0HN4V9JK8MBA2:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9JK8MBA2","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:53:12.5899153Z","@mt":"Exception occurred while processing message.","@l":"Error","@x":"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: IDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.\r\n   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(OpenIdConnectProtocolValidationContext validationContext)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()","@tr":"aa5a57af126303c26b865dcf966859fa","@sp":"0b2f01d845becb95","EventId":{"Id":17,"Name":"ExceptionProcessingMessage"},"SourceContext":"Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler","RequestId":"0HN4V9JK8MBA2:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9JK8MBA2","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:53:12.6057694Z","@mt":"An unhandled exception has occurred while executing the request.","@l":"Error","@x":"Microsoft.AspNetCore.Authentication.AuthenticationFailureException: An error was encountered while handling the remote login.\r\n ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: IDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.\r\n   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(OpenIdConnectProtocolValidationContext validationContext)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","@tr":"aa5a57af126303c26b865dcf966859fa","@sp":"0b2f01d845becb95","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN4V9JK8MBA2:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9JK8MBA2","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:53:45.8605425Z","@mt":"Microsoft.IdentityModel Version: 7.6.0.0. Date 07/08/2024 12:53:45. PII logging is ON, do not use in production. See https://aka.ms/IdentityModel/PII for details. \r\nIDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.","@l":"Error","@tr":"7cd0a15097b72e385497469a116b1d34","@sp":"dd3f78b296c5b0ed","SourceContext":"Microsoft.IdentityModel.LoggingExtensions.IdentityLoggerAdapter","RequestId":"0HN4V9JUM5D3T:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9JUM5D3T","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:53:45.8893012Z","@mt":"Exception occurred while processing message.","@l":"Error","@x":"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: IDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.\r\n   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(OpenIdConnectProtocolValidationContext validationContext)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()","@tr":"7cd0a15097b72e385497469a116b1d34","@sp":"dd3f78b296c5b0ed","EventId":{"Id":17,"Name":"ExceptionProcessingMessage"},"SourceContext":"Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler","RequestId":"0HN4V9JUM5D3T:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9JUM5D3T","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:53:45.9087141Z","@mt":"An unhandled exception has occurred while executing the request.","@l":"Error","@x":"Microsoft.AspNetCore.Authentication.AuthenticationFailureException: An error was encountered while handling the remote login.\r\n ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: IDX21336: Both 'id_token' and 'access_token' should be present in OpenIdConnectProtocolValidationContext.ProtocolMessage received from Token Endpoint. Cannot process the message.\r\n   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator.ValidateTokenResponse(OpenIdConnectProtocolValidationContext validationContext)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleRemoteAuthenticateAsync()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","@tr":"7cd0a15097b72e385497469a116b1d34","@sp":"dd3f78b296c5b0ed","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN4V9JUM5D3T:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9JUM5D3T","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:56:30.3032372Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-07-08 12:56:30Z - 156f5f3f-ff57-4c07-81d9-509da5879643] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"88a7bfda02fc9e077787d642c4da5f56","@sp":"a21ed5a2e16bab22","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4V9LFI42GA:00000003","RequestPath":"/signin-oidc","ConnectionId":"0HN4V9LFI42GA","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:56:38.7390041Z","@mt":"Unhandled exception rendering component: {Message}","@l":"Warning","@x":"System.InvalidOperationException: StatusCode cannot be set because the response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)\r\n   at Microsoft.AspNetCore.Http.DefaultHttpResponse.Redirect(String location, Boolean permanent)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.SignOutAsync(AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignOutAsync(HttpContext context, String scheme, AuthenticationProperties properties)\r\n   at JCTG.WebApp.Frontend.Pages.Authentication.Logout.SignOut() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Pages\\Authentication\\Logout.razor:line 20\r\n   at JCTG.WebApp.Frontend.Pages.Authentication.Logout.OnInitializedAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Pages\\Authentication\\Logout.razor:line 14\r\n   at Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()","@tr":"26c228109c17d954afdb0d38121646bd","@sp":"7254e0e497db4328","Message":"StatusCode cannot be set because the response has already started.","EventId":{"Id":100,"Name":"ExceptionRenderingComponent"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteRenderer","TransportConnectionId":"IS9OrrcNKI4mrTAVv8Kn4Q","RequestId":"0HN4V9LFI42GA:00000011","RequestPath":"/_blazor","ConnectionId":"0HN4V9LFI42GA","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:56:38.7738308Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"System.InvalidOperationException: StatusCode cannot be set because the response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowResponseAlreadyStartedException(String value)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.set_StatusCode(Int32 value)\r\n   at Microsoft.AspNetCore.Http.DefaultHttpResponse.Redirect(String location, Boolean permanent)\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.SignOutAsync(AuthenticationProperties properties)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationService.SignOutAsync(HttpContext context, String scheme, AuthenticationProperties properties)\r\n   at JCTG.WebApp.Frontend.Pages.Authentication.Logout.SignOut() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Pages\\Authentication\\Logout.razor:line 20\r\n   at JCTG.WebApp.Frontend.Pages.Authentication.Logout.OnInitializedAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Pages\\Authentication\\Logout.razor:line 14\r\n   at Microsoft.AspNetCore.Components.ComponentBase.RunInitAndSetParametersAsync()","@tr":"26c228109c17d954afdb0d38121646bd","@sp":"7254e0e497db4328","CircuitId":"ygPKrQx02eUMLdYqHoZoVX_qydS1CdA4sO4p06zqrFY","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"IS9OrrcNKI4mrTAVv8Kn4Q","RequestId":"0HN4V9LFI42GA:00000011","RequestPath":"/_blazor","ConnectionId":"0HN4V9LFI42GA","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:56:38.8365645Z","@mt":"Unhandled exception rendering component: {Message}","@l":"Warning","@x":"System.ObjectDisposedException: Cannot access a disposed object.\r\n   at Microsoft.AspNetCore.Components.RenderTree.ArrayBuilder`1.GrowBuffer(Int32 desiredCapacity)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(DiffContext& diffContext, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, Int32 componentId, ArrayRange`1 oldTree, ArrayRange`1 newTree)\r\n   at Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment, Exception& renderFragmentException)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.RenderInExistingBatch(RenderQueueEntry renderQueueEntry)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()","@tr":"26c228109c17d954afdb0d38121646bd","@sp":"7254e0e497db4328","Message":"Cannot access a disposed object.","EventId":{"Id":100,"Name":"ExceptionRenderingComponent"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteRenderer","TransportConnectionId":"IS9OrrcNKI4mrTAVv8Kn4Q","RequestId":"0HN4V9LFI42GA:00000011","RequestPath":"/_blazor","ConnectionId":"0HN4V9LFI42GA","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-07-08T12:56:38.8381232Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"System.ObjectDisposedException: Cannot access a disposed object.\r\n   at Microsoft.AspNetCore.Components.RenderTree.ArrayBuilder`1.GrowBuffer(Int32 desiredCapacity)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.InsertNewFrame(DiffContext& diffContext, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForFramesWithSameSequence(DiffContext& diffContext, Int32 oldFrameIndex, Int32 newFrameIndex)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.AppendDiffEntriesForRange(DiffContext& diffContext, Int32 oldStartIndex, Int32 oldEndIndexExcl, Int32 newStartIndex, Int32 newEndIndexExcl)\r\n   at Microsoft.AspNetCore.Components.RenderTree.RenderTreeDiffBuilder.ComputeDiff(Renderer renderer, RenderBatchBuilder batchBuilder, Int32 componentId, ArrayRange`1 oldTree, ArrayRange`1 newTree)\r\n   at Microsoft.AspNetCore.Components.Rendering.ComponentState.RenderIntoBatch(RenderBatchBuilder batchBuilder, RenderFragment renderFragment, Exception& renderFragmentException)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.RenderInExistingBatch(RenderQueueEntry renderQueueEntry)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.ProcessRenderQueue()","@tr":"26c228109c17d954afdb0d38121646bd","@sp":"7254e0e497db4328","CircuitId":"ygPKrQx02eUMLdYqHoZoVX_qydS1CdA4sO4p06zqrFY","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"IS9OrrcNKI4mrTAVv8Kn4Q","RequestId":"0HN4V9LFI42GA:00000011","RequestPath":"/_blazor","ConnectionId":"0HN4V9LFI42GA","ApplicationName":"Trade Hubbing","Environment":"Production"}
