{"@t":"2024-06-17T06:16:44.5130002Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 06:16:44Z - b86b5fd9-6ae3-48fa-827f-cdda9aeea8ef] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"7e7c225bdfc3edb31deca3c0cf4f1082","@sp":"1670b3b5034d2e17","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4EIK44IARD:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4EIK44IARD","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T06:16:53.5498730Z","@mt":"code is not ok","@l":"Debug","@tr":"f066310a0a308407428833149567e1ac","@sp":"61533d9a409a2f27","SourceContext":"JCTG.WebApp.Backend.Api.TerminalController","ActionId":"080199e5-7adc-4733-86c5-c271fe5bcf8d","ActionName":"JCTG.WebApp.Backend.Api.TerminalController.TerminalConfig (JCTG.WebApp)","RequestId":"0HN4EIK44IARD:00000017","RequestPath":"/api/terminalconfig","ConnectionId":"0HN4EIK44IARD","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T06:17:12.9321122Z","@mt":"code is not ok","@l":"Debug","@tr":"303a2b8f386d966604e78d0dedd651b8","@sp":"6220cf5578b3950f","SourceContext":"JCTG.WebApp.Backend.Api.TerminalController","ActionId":"080199e5-7adc-4733-86c5-c271fe5bcf8d","ActionName":"JCTG.WebApp.Backend.Api.TerminalController.TerminalConfig (JCTG.WebApp)","RequestId":"0HN4EIK44IARD:0000001B","RequestPath":"/api/terminalconfig","ConnectionId":"0HN4EIK44IARD","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T06:17:39.9780717Z","@mt":"accountId is not in a valid format.","@l":"Debug","@tr":"40b0d64b3a98d0305d7f26d038d86a24","@sp":"4817318abaaaa815","SourceContext":"JCTG.WebApp.Backend.Api.TerminalController","ActionId":"080199e5-7adc-4733-86c5-c271fe5bcf8d","ActionName":"JCTG.WebApp.Backend.Api.TerminalController.TerminalConfig (JCTG.WebApp)","RequestId":"0HN4EIK44IARD:0000001D","RequestPath":"/api/terminalconfig","ConnectionId":"0HN4EIK44IARD","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:30:46.9912048Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:30:46Z - c88ba357-cea4-4bd3-bcf7-1c1d44f98d70] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"2856b35db92d3d1263b2e4406f69f5bc","@sp":"f7a1b97c2b0c4c3e","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ES9OIOP56:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ES9OIOP56","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:31:05.6991500Z","@mt":"Unhandled exception rendering component: {Message}","@l":"Warning","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LogMessage', table 'justcalltheguy.dbo.MarketAbstention'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:4e65f0c4-000a-427e-9a37-b41af2331c28\r\nError Number:515,State:2,Class:16\r\nClientConnectionId before routing:461a4b0b-2040-45cf-96b0-610335d9475f\r\nRouting Destination:daf8e1e4c395.tr49958.westeurope1-a.worker.database.windows.net,11030\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JCTG.WebApp.Backend.Repository.MarketAbstentionRepository.AddAsync(MarketAbstention model) in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Backend\\Repository\\MarketAbstentionRepository.cs:line 54\r\n   at JCTG.WebApp.Frontend.Components.Modal.MarketAbstentionAddOrEditModal.SubmitAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Components\\Modal\\MarketAbstentionAddOrEditModal.razor:line 130\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.Forms.EditForm.HandleSubmitAsync()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)","@tr":"3fca6b605189187079e092b6cbd6b4e6","@sp":"4716d8a0819b5758","Message":"An error occurred while saving the entity changes. See the inner exception for details.","EventId":{"Id":100,"Name":"ExceptionRenderingComponent"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteRenderer","TransportConnectionId":"XQVujHuIG5KJsL0MjUVktA","RequestId":"0HN4ES9OIOP56:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4ES9OIOP56","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:31:05.7284093Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LogMessage', table 'justcalltheguy.dbo.MarketAbstention'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:4e65f0c4-000a-427e-9a37-b41af2331c28\r\nError Number:515,State:2,Class:16\r\nClientConnectionId before routing:461a4b0b-2040-45cf-96b0-610335d9475f\r\nRouting Destination:daf8e1e4c395.tr49958.westeurope1-a.worker.database.windows.net,11030\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JCTG.WebApp.Backend.Repository.MarketAbstentionRepository.AddAsync(MarketAbstention model) in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Backend\\Repository\\MarketAbstentionRepository.cs:line 54\r\n   at JCTG.WebApp.Frontend.Components.Modal.MarketAbstentionAddOrEditModal.SubmitAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Components\\Modal\\MarketAbstentionAddOrEditModal.razor:line 130\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.Forms.EditForm.HandleSubmitAsync()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)","@tr":"3fca6b605189187079e092b6cbd6b4e6","@sp":"4716d8a0819b5758","CircuitId":"i9ULsH2YdlD9HOm7ofJY4trqRdOzg2xztSqdlOwsfhA","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"XQVujHuIG5KJsL0MjUVktA","RequestId":"0HN4ES9OIOP56:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4ES9OIOP56","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:31:13.8014395Z","@mt":"'{CorrelationCookieName}' cookie not found.","@l":"Warning","@tr":"ce72015185a0a42428b67f115110da9b","@sp":"7a873d2d9cc6b0b6","CorrelationCookieName":".AspNetCore.Correlation.knkLTVdRWDkDzKq_doxV21aX6k8CNEw7Vl5Ek9jkB9Y","EventId":{"Id":15,"Name":"CorrelationCookieNotFound"},"SourceContext":"Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler","RequestId":"0HN4ES9OIOP56:0000001D","RequestPath":"/signin-oidc","ConnectionId":"0HN4ES9OIOP56","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:31:13.9069944Z","@mt":"Unable to configure Browser Link script injection on the response. ","@l":"Warning","@tr":"23c71edb3c1966c9896f401e92f68282","@sp":"8c9f9a0ab2dc1c27","EventId":{"Id":3,"Name":"FailedToConfigureForBrowserLink"},"SourceContext":"Microsoft.WebTools.BrowserLink.Net.BrowserLinkMiddleware","RequestId":"0HN4ES9OIOP56:0000001F","RequestPath":"/MicrosoftIdentity/Account/Error","ConnectionId":"0HN4ES9OIOP56","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:31:13.9078076Z","@mt":"Unable to configure browser refresh script injection on the response. Consider manually adding '<script src=\"/_framework/aspnetcore-browser-refresh.js\"></script>' to the body of the page.","@l":"Warning","@tr":"23c71edb3c1966c9896f401e92f68282","@sp":"8c9f9a0ab2dc1c27","EventId":{"Id":3,"Name":"FailedToConfiguredForRefreshes"},"SourceContext":"Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware","RequestId":"0HN4ES9OIOP56:0000001F","RequestPath":"/MicrosoftIdentity/Account/Error","ConnectionId":"0HN4ES9OIOP56","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:33:56.5319456Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:33:56Z - cebcf259-29d3-4a0b-84bf-b83fcdd7c6e8] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"79c561493a6198d997425c03b784bcb5","@sp":"3fe8b3764276beed","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ESBGU6I8R:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ESBGU6I8R","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:34:11.5902230Z","@mt":"Unhandled exception rendering component: {Message}","@l":"Warning","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LogMessage', table 'justcalltheguy.dbo.MarketAbstention'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:2692bed3-0912-4691-a613-d50f428e4fde\r\nError Number:515,State:2,Class:16\r\nClientConnectionId before routing:d71013d8-7131-4606-87c3-60bbe46bb5fa\r\nRouting Destination:daf8e1e4c395.tr49958.westeurope1-a.worker.database.windows.net,11030\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JCTG.WebApp.Backend.Repository.MarketAbstentionRepository.AddAsync(MarketAbstention model) in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Backend\\Repository\\MarketAbstentionRepository.cs:line 54\r\n   at JCTG.WebApp.Frontend.Components.Modal.MarketAbstentionAddOrEditModal.SubmitAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Components\\Modal\\MarketAbstentionAddOrEditModal.razor:line 130\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.Forms.EditForm.HandleSubmitAsync()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)","@tr":"b348ec6c7a33b27b0f47b9be41c80d7a","@sp":"bc9725d82ed3cd3d","Message":"An error occurred while saving the entity changes. See the inner exception for details.","EventId":{"Id":100,"Name":"ExceptionRenderingComponent"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.RemoteRenderer","TransportConnectionId":"fgEcl62AO-egZmA2b_ha_w","RequestId":"0HN4ESBGU6I8R:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4ESBGU6I8R","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:34:11.6143644Z","@mt":"Unhandled exception in circuit '{CircuitId}'.","@l":"Error","@x":"Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.\r\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'LogMessage', table 'justcalltheguy.dbo.MarketAbstention'; column does not allow nulls. INSERT fails.\r\n   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)\r\n   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\nClientConnectionId:2692bed3-0912-4691-a613-d50f428e4fde\r\nError Number:515,State:2,Class:16\r\nClientConnectionId before routing:d71013d8-7131-4606-87c3-60bbe46bb5fa\r\nRouting Destination:daf8e1e4c395.tr49958.westeurope1-a.worker.database.windows.net,11030\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)\r\n   at JCTG.WebApp.Backend.Repository.MarketAbstentionRepository.AddAsync(MarketAbstention model) in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Backend\\Repository\\MarketAbstentionRepository.cs:line 54\r\n   at JCTG.WebApp.Frontend.Components.Modal.MarketAbstentionAddOrEditModal.SubmitAsync() in C:\\Users\\joeri.pansaerts\\source\\repos\\JustCallTheGuy\\JCTG.WebApp\\Frontend\\Components\\Modal\\MarketAbstentionAddOrEditModal.razor:line 130\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.Forms.EditForm.HandleSubmitAsync()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)","@tr":"b348ec6c7a33b27b0f47b9be41c80d7a","@sp":"bc9725d82ed3cd3d","CircuitId":"u8QdH6pa2kbHuV7hEBPQLu-kZqAgEDBm6P1QUIh96yg","EventId":{"Id":111,"Name":"CircuitUnhandledException"},"SourceContext":"Microsoft.AspNetCore.Components.Server.Circuits.CircuitHost","TransportConnectionId":"fgEcl62AO-egZmA2b_ha_w","RequestId":"0HN4ESBGU6I8R:0000000F","RequestPath":"/_blazor","ConnectionId":"0HN4ESBGU6I8R","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:35:40.4313813Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:35:40Z - 93c8c3cd-9ea7-44dc-9ed8-9597fd2bd9fd] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"4d364dfd733e10ddca03b2e615874e7d","@sp":"68b0abeffff9b994","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ESCFI809E:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ESCFI809E","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:37:57.0115592Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:37:57Z - aabfdf33-d83e-4993-a603-b784f94bd661] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"30a3f459c874d6c0d25165c006e82711","@sp":"279392fe9dfc2daf","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ESDOJ917P:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ESDOJ917P","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:39:26.7525055Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:39:26Z - d62be99a-efbc-4be8-8ea4-802bf6c61956] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"d1458aaf785911da528436d165926891","@sp":"eb5165323d2083d1","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ESEJH44QT:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ESEJH44QT","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:43:45.0283648Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:43:45Z - 61121d74-5011-489d-bd41-a15f4710cb5d] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"9a6178dda6638552068ed615d4e14570","@sp":"93ecc97ef418d304","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ESH0M01P9:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ESH0M01P9","ApplicationName":"Trade Hubbing","Environment":"Production"}
{"@t":"2024-06-17T15:48:28.0040584Z","@mt":"True MSAL 4.61.3.0 MSAL.NetCore .NET 8.0.5 Microsoft Windows 10.0.22631 [2024-06-17 15:48:27Z - 734f3691-7a5d-48e1-9358-3c17080e8e78] Only in-memory caching is used. The cache is not persisted and will be lost if the machine is restarted. It also does not scale for a web app or web API, where the number of users can grow large. In production, web apps and web APIs should use distributed caching like Redis. See https://aka.ms/msal-net-cca-token-cache-serialization","@l":"Warning","@tr":"1f654a6f93006db7d2cdbfdd24732dfd","@sp":"56a3b624fa0b5a63","SourceContext":"Microsoft.Identity.Web.TokenAcquisition","RequestId":"0HN4ESJHK2GIH:00000001","RequestPath":"/signin-oidc","ConnectionId":"0HN4ESJHK2GIH","ApplicationName":"Trade Hubbing","Environment":"Production"}
